{
  "name": "RL_Project",
  "description": "",
  "machines": [
    {
      "name": "HighwayEnvironment",
      "description": "",
      "location": "HighwayEnvironment/HighwayEnvironment.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Slowing_Down.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Lane_Left_Collision.prob2trace",
          "selected": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 800.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 250.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 0.7,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 0.3
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 55.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) >= -3.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -10.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -2.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_HP",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_High_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Highest_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_High_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Highest_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_500k.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "EXECUTIONS": 1000,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_500k.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "HighwayEnvironment/HighwayEnvironment.py"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Base.py"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment/Traces_Base"
        },
        {
          "path": "HighwayEnvironment/Traces_Higher_Penalty_Collision"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_High_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Highest_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_500k.py"
        }
      ],
      "visBVisualisation": "HighwayEnvironment/visualization/HighwayEnv.json",
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment2",
      "description": "",
      "location": "HighwayEnvironment/HighwayEnvironment2.mch",
      "lastUsedPreferenceName": "MAX_OPERATIONS_1",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Lane_Left_Collision.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Slowing_Down.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Scenario_Base_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Scenario_Higher_Penalty_Collision_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 800.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 250.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 0.7,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 0.3
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 55.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) >= -3.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "Traces_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "HighwayEnvironment/HighwayEnvironment.py"
        },
        {
          "path": "Traces_Shield"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Base.py"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment/Traces_Base_Shield"
        },
        {
          "path": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield"
        }
      ],
      "visBVisualisation": "HighwayEnvironment/visualization/HighwayEnv.json",
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment3",
      "description": "",
      "location": "HighwayEnvironment/HighwayEnvironment3.mch",
      "lastUsedPreferenceName": "MAX_OPERATIONS_0",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Lane_Left_Collision.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Slowing_Down.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Scenario_Base_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Scenario_Higher_Penalty_Collision_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 800.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 250.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 0.7,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 0.3
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 55.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) >= -3.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "Traces_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "HighwayEnvironment/HighwayEnvironment.py"
        },
        {
          "path": "Traces_Shield"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Base.py"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment/Traces_Base_Shield"
        },
        {
          "path": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield"
        }
      ],
      "visBVisualisation": "HighwayEnvironment/visualization/HighwayEnv.json",
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment (1)",
      "description": "",
      "location": "HighwayEnvironment_v2/HighwayEnvironment.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Slowing_Down.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Lane_Left_Collision.prob2trace",
          "selected": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 800.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 250.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 0.7,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 0.3
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 55.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) >= -3.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -10.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -2.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_Base",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_HP",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment.py"
        },
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment_Base.py"
        },
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment_v2/Traces_Base"
        },
        {
          "path": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision"
        }
      ],
      "visBVisualisation": "HighwayEnvironment_v2/visualization/HighwayEnv.json",
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment2 (1)",
      "description": "",
      "location": "HighwayEnvironment_v2/HighwayEnvironment2.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Lane_Left_Collision.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Slowing_Down.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Scenario_Base_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Scenario_Higher_Penalty_Collision_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 800.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 250.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 0.7,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 0.3
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 55.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) >= -3.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "Traces_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment.py"
        },
        {
          "path": "Traces_Shield"
        },
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment_Base.py"
        },
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment_v2/Traces_Base_Shield"
        },
        {
          "path": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield"
        }
      ],
      "visBVisualisation": "HighwayEnvironment_v2/visualization/HighwayEnv.json",
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment3 (1)",
      "description": "",
      "location": "HighwayEnvironment_v2/HighwayEnvironment3.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Lane_Left_Collision.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Slowing_Down.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Scenario_Base_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment_v2/traces/Agent_Scenario_Higher_Penalty_Collision_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 800.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 250.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 0.7,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 0.3
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 55.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) >= -3.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "Traces_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_Base_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_HP_Shielded",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment.py"
        },
        {
          "path": "Traces_Shield"
        },
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment_Base.py"
        },
        {
          "path": "HighwayEnvironment_v2/HighwayEnvironment_Higher_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment_v2/Traces_Base_Shield"
        },
        {
          "path": "HighwayEnvironment_v2/Traces_Higher_Penalty_Collision_Shield"
        }
      ],
      "visBVisualisation": "HighwayEnvironment_v2/visualization/HighwayEnv.json",
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment_RSS",
      "description": "",
      "location": "HighwayEnvironment/HighwayEnvironment_RSS.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Lane_Left_Collision.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Slowing_Down.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Scenario_Base_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Scenario_Higher_Penalty_Collision_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 800.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 250.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 0.7,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 0.3
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 55.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) >= -3.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "Traces_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "HighwayEnvironment/HighwayEnvironment.py"
        },
        {
          "path": "Traces_Shield"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Base.py"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment/Traces_Base_Shield"
        },
        {
          "path": "HighwayEnvironment/Traces_Higher_Penalty_Collision_Shield"
        }
      ],
      "visBVisualisation": null,
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment_RSS_v2",
      "description": "",
      "location": "HighwayEnvironment/HighwayEnvironment_RSS_v2.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Lane_Left_Collision.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Slowing_Down.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Scenario_Base_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/traces/Agent_Scenario_Higher_Penalty_Collision_Shield.prob2trace",
          "selected": true
        },
        {
          "taskType": "TABLE_FORMULA",
          "commandType": "expression_coverage",
          "formula": "IF Crash = TRUE THEN 40.0 ELSE VehiclesVx(EgoVehicle) END"
        },
        {
          "taskType": "TABLE_FORMULA",
          "commandType": "expression_coverage",
          "formula": "IF Crash = TRUE THEN 1000.0 ELSE VehiclesVx(EgoVehicle) + min(VehiclesVx[OtherV]) END\n"
        },
        {
          "taskType": "TABLE_FORMULA",
          "commandType": "expression_coverage",
          "formula": "IF Crash = TRUE THEN 1000.0 ELSE min({v•v:OtherV|VehiclesVx(EgoVehicle) + VehiclesVx(v)}) END\n"
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 800.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 250.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 0.7,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 0.3
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 55.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) >= -3.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "Traces_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_Base_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Base.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 10,
            "ENDING_TIME": 60000
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF1_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Velocity_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Reward_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_Distance_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF4_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF5_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF2_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF3_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "id": "Sim_SAF6_HP_Shielded",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 1000,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Base_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.99,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "ALL_INVARIANTS"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle))",
            "DESIRED_VALUE": 25.0,
            "CHECKING_TYPE": "AVERAGE",
            "EPSILON": 5.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "Reward",
            "DESIRED_VALUE": 40.0,
            "CHECKING_TYPE": "SUM",
            "EPSILON": 20.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "VehiclesVx(EgoVehicle)",
            "DESIRED_VALUE": 1500.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 300.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) < 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (VehiclesAx(EgoVehicle) > 0.0 => RSQRT(VehiclesAy(EgoVehicle) * VehiclesAy(EgoVehicle) + VehiclesAx(EgoVehicle) * VehiclesAx(EgoVehicle)) <= 5.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) >= 20.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.7,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => (RSQRT(VehiclesVy(EgoVehicle) * VehiclesVy(EgoVehicle) + VehiclesVx(EgoVehicle) * VehiclesVx(EgoVehicle)) <= 30.0)",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.01,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE & not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) >= -15.0 & VehiclesX(v) <= 15.0  & VehiclesY(v) >= -4.0 & VehiclesY(v) <= 4.0))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.001,
            "PROBABILITY": 0.999,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "PREDICATE": "Crash = FALSE => not(#v. (v : Vehicles \\ {EgoVehicle} & VehiclesX(v) < 0.01 & VehiclesX(v) > -0.01 & VehiclesY(v) < 0.01 & VehiclesY(v) > -0.01))",
            "ENDING_TIME": 60000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_INVARIANT"
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MEAN",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF VehiclesY(EgoVehicle) >= 7.0 THEN 1.0 ELSE 0.0 END",
            "DESIRED_VALUE": 30.0,
            "CHECKING_TYPE": "SUM_MEAN_BETWEEN_STEPS",
            "EPSILON": 30.0
          }
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield",
          "type": "ESTIMATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "ESTIMATION_TYPE": "MINIMUM",
            "ENDING_TIME": 60000,
            "EXPRESSION": "IF Crash = TRUE THEN 100.0 ELSE min({v•v:OtherV|VehiclesVx(EgoVehicle)+VehiclesVx(v)}) END",
            "DESIRED_VALUE": 13.0,
            "CHECKING_TYPE": "MINIMUM",
            "EPSILON": 7.0
          }
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/Faster_Should_be_Allowed.prob2trace",
          "selected": true
        },
        {
          "taskType": "REPLAY_TRACE",
          "location": "HighwayEnvironment/Lane_Left_Should_Not_Be_Allowed.prob2trace",
          "selected": true
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "HighwayEnvironment/HighwayEnvironment.py"
        },
        {
          "path": "Traces_Shield"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Base.py"
        },
        {
          "path": "HighwayEnvironment/HighwayEnvironment_Higher_Penalty_Collision.py"
        },
        {
          "path": "HighwayEnvironment/Traces_Base_RSS_Shield"
        },
        {
          "path": "HighwayEnvironment/Traces_Higher_Penalty_Collision_RSS_Shield"
        }
      ],
      "visBVisualisation": null,
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment_RSS (1)",
      "description": "",
      "location": "HighwayEnvironment_v2/HighwayEnvironment_RSS.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [],
      "visBVisualisation": null,
      "historyChartItems": []
    },
    {
      "name": "HighwayEnvironment_RSS_v2 (1)",
      "description": "",
      "location": "HighwayEnvironment_v2/HighwayEnvironment_RSS_v2.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [],
      "visBVisualisation": null,
      "historyChartItems": []
    },
    {
      "name": "LunarLander",
      "description": "",
      "location": "LunarLander/LunarLander.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "LunarLander/LunarLander.py"
        }
      ],
      "visBVisualisation": "LunarLander/visualization/Lunar_Lander.json",
      "historyChartItems": []
    },
    {
      "name": "FrozenLake",
      "description": "",
      "location": "FrozenLake/FrozenLake.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "REPLAY_TRACE",
          "location": "FrozenLake/FrozenLake.prob2trace",
          "selected": true
        },
        {
          "taskType": "MODEL_CHECKING",
          "searchStrategy": "MIXED_BF_DF",
          "options": [
            "FIND_DEADLOCKS",
            "FIND_INVARIANT_VIOLATIONS",
            "PARTIAL_ORDER_REDUCTION",
            "PARTIAL_GUARD_EVALUATION"
          ],
          "shouldExecute": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "FrozenLake/FrozenLake.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ENDING_TIME": 100000
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "FrozenLake/FrozenLake.py"
        }
      ],
      "visBVisualisation": "FrozenLake/visualization/FrozenLake.json",
      "historyChartItems": []
    },
    {
      "name": "CliffWalking",
      "description": "",
      "location": "CliffWalking/CliffWalking.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "SIMULATION",
          "simulationPath": "CliffWalking/CliffWalking.py",
          "type": "MONTE_CARLO_SIMULATION",
          "information": {
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "ENDING_TIME": 100000
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "CliffWalking/CliffWalking.py"
        }
      ],
      "visBVisualisation": "CliffWalking/visualization/CliffWalking.json",
      "historyChartItems": []
    },
    {
      "name": "AutonomousDroneSwarm_abstract",
      "description": "",
      "location": "AutonomousDroneSwarm/AutonomousDroneSwarm_abstract.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "AutonomousDroneSwarm/MultiAgent2.py"
        }
      ],
      "visBVisualisation": "AutonomousDroneSwarm/visualization/AutonomousDroneSwarm_abstract.json",
      "historyChartItems": []
    },
    {
      "name": "AutonomousDroneSwarm_small_abstract",
      "description": "",
      "location": "AutonomousDroneSwarm/AutonomousDroneSwarm_small_abstract.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "MODEL_CHECKING",
          "searchStrategy": "MIXED_BF_DF",
          "options": [
            "FIND_DEADLOCKS",
            "FIND_INVARIANT_VIOLATIONS"
          ],
          "shouldExecute": true
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "AutonomousDroneSwarm/MultiAgent2_small.py"
        }
      ],
      "visBVisualisation": "AutonomousDroneSwarm/visualization/AutonomousDroneSwarm_abstract.json",
      "historyChartItems": []
    },
    {
      "name": "AutonomousDroneSwarm",
      "description": "",
      "location": "AutonomousDroneSwarm/AutonomousDroneSwarm.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [
        {
          "taskType": "MODEL_CHECKING",
          "searchStrategy": "MIXED_BF_DF",
          "options": [
            "FIND_DEADLOCKS",
            "FIND_INVARIANT_VIOLATIONS",
            "PARTIAL_ORDER_REDUCTION",
            "PARTIAL_GUARD_EVALUATION"
          ],
          "shouldExecute": true
        },
        {
          "taskType": "SIMULATION",
          "simulationPath": "AutonomousDroneSwarm/MultiAgent2.py",
          "type": "HYPOTHESIS_TEST",
          "information": {
            "SIGNIFICANCE": 0.05,
            "PROBABILITY": 0.95,
            "MAX_STEPS_BEFORE_PROPERTY": 0,
            "EXECUTIONS": 100,
            "PREDICATE": "card(visited) = 100",
            "ENDING_TIME": 100000,
            "HYPOTHESIS_CHECKING_TYPE": "LEFT_TAILED",
            "CHECKING_TYPE": "PREDICATE_FINAL"
          }
        }
      ],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "AutonomousDroneSwarm/MultiAgent.py"
        },
        {
          "path": "AutonomousDroneSwarm/MultiAgent2.py"
        }
      ],
      "visBVisualisation": "AutonomousDroneSwarm/visualization/AutonomousDroneSwarm.json",
      "historyChartItems": []
    },
    {
      "name": "AutonomousDroneSwarm_4",
      "description": "",
      "location": "AutonomousDroneSwarm/AutonomousDroneSwarm_4.mch",
      "lastUsedPreferenceName": "default",
      "validationTasks": [],
      "ltlPatterns": [],
      "symbolicAnimationFormulas": [],
      "testCases": [],
      "simulations": [
        {
          "path": "AutonomousDroneSwarm/MultiAgent2_4Drones.py"
        }
      ],
      "visBVisualisation": "AutonomousDroneSwarm/visualization/AutonomousDroneSwarm_4Drones.json",
      "historyChartItems": []
    }
  ],
  "requirements": [
    {
      "name": "SAF1",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "The agent must avoid collisions with other vehicles",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_SAF1_Base & Sim_SAF1_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_SAF1_Base_Shielded & Sim_SAF1_HP_Shielded"
        }
      ]
    },
    {
      "name": "SAF2",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "The agent must drive with a velocity faster than 20 m/s",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_SAF2_Base & Sim_SAF2_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_SAF2_Base_Shielded & Sim_SAF2_HP_Shielded"
        }
      ]
    },
    {
      "name": "SAF3",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "The agent must drive slower than 40 m/s",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_SAF3_Base & Sim_SAF3_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_SAF3_Base_Shielded & Sim_SAF3_HP_Shielded"
        }
      ]
    },
    {
      "name": "SAF4",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "The agent should decelerate at a maximum of 5 m/s2",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_SAF4_Base & Sim_SAF4_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_SAF4_Base_Shielded & Sim_SAF4_HP_Shielded"
        }
      ]
    },
    {
      "name": "SAF5",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "The agent should accelerate at a maximum of 5 m/s2",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_SAF5_Base & Sim_SAF5_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_SAF5_Base_Shielded & Sim_SAF5_HP_Shielded"
        }
      ]
    },
    {
      "name": "SAF6",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "To each other vehicle, the agent should keep a lateral safety distance of at least 2 m and a longitudinal safety distance of at least 10 m",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_SAF6_Base & Sim_SAF6_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_SAF6_Base_Shielded & Sim_SAF6_HP_Shielded"
        }
      ]
    },
    {
      "name": "Episode Length",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "RL agent should drive as long as possible without collisions.",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_SAF1_Base & Sim_SAF1_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_SAF1_Base_Shielded & Sim_SAF1_HP_Shielded"
        }
      ]
    },
    {
      "name": "Velocity",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "RL agent should drive with a higher speed if possible",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_Velocity_Base & Sim_Velocity_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_Velocity_Base_Shielded & Sim_Velocity_HP_Shielded"
        }
      ]
    },
    {
      "name": "Distance",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "RL agent should drive a long distance within an episode.",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_Distance_Base & Sim_Distance_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_Distance_Base_Shielded & Sim_Distance_HP_Shielded"
        }
      ]
    },
    {
      "name": "Reward",
      "introducedAt": "HighwayEnvironment",
      "type": "FUNCTIONAL",
      "text": "RL agent should achieve a high cumulative reward",
      "validationObligations": [
        {
          "machine": "HighwayEnvironment",
          "expression": "Sim_Reward_Base & Sim_Reward_HP"
        },
        {
          "machine": "HighwayEnvironment2",
          "expression": "Sim_Reward_Base_Shielded & Sim_Reward_HP_Shielded"
        }
      ]
    }
  ],
  "preferences": [
    {
      "name": "MAX_OPERATIONS_0",
      "preferences": {}
    },
    {
      "name": "MAX_OPERATIONS_1",
      "preferences": {
        "MAX_OPERATIONS": "1"
      }
    }
  ],
  "metadata": {
    "fileType": "Project",
    "formatVersion": 46,
    "savedAt": "2024-05-14T10:38:15.859624Z",
    "creator": "User",
    "proB2KernelVersion": "4.13.1",
    "proBCliVersion": null,
    "modelName": null
  }
}